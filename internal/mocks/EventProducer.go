// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/ozonva/ova-promise-api/internal/domain"
	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// EventProducer is an autogenerated mock type for the EventProducer type
type EventProducer struct {
	mock.Mock
}

// NewEventPromiseCreated provides a mock function with given fields: ctx, promise
func (_m *EventProducer) NewEventPromiseCreated(ctx context.Context, promise *domain.Promise) error {
	ret := _m.Called(ctx, promise)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.Promise) error); ok {
		r0 = rf(ctx, promise)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEventPromiseRemoved provides a mock function with given fields: ctx, id
func (_m *EventProducer) NewEventPromiseRemoved(ctx context.Context, id uuid.UUID) error {
	ret := _m.Called(ctx, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEventPromiseUpdated provides a mock function with given fields: ctx, id
func (_m *EventProducer) NewEventPromiseUpdated(ctx context.Context, id uuid.UUID) error {
	ret := _m.Called(ctx, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
